# ruff: noqa: A003, F821, E501
"""This is an automatically generated stub for `custom.capnp`."""
from __future__ import annotations

from contextlib import contextmanager
from io import BufferedWriter
from typing import Iterator

class CustomReserved0:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved0Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved0Reader: ...
    @staticmethod
    def new_message() -> CustomReserved0Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved0Reader(CustomReserved0):
    def as_builder(self) -> CustomReserved0Builder: ...

class CustomReserved0Builder(CustomReserved0):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved0Builder: ...
    def copy(self) -> CustomReserved0Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved0Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...

class CustomReserved1:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved1Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved1Reader: ...
    @staticmethod
    def new_message() -> CustomReserved1Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved1Reader(CustomReserved1):
    def as_builder(self) -> CustomReserved1Builder: ...

class CustomReserved1Builder(CustomReserved1):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved1Builder: ...
    def copy(self) -> CustomReserved1Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved1Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...

class CustomReserved2:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved2Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved2Reader: ...
    @staticmethod
    def new_message() -> CustomReserved2Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved2Reader(CustomReserved2):
    def as_builder(self) -> CustomReserved2Builder: ...

class CustomReserved2Builder(CustomReserved2):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved2Builder: ...
    def copy(self) -> CustomReserved2Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved2Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...

class CustomReserved3:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved3Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved3Reader: ...
    @staticmethod
    def new_message() -> CustomReserved3Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved3Reader(CustomReserved3):
    def as_builder(self) -> CustomReserved3Builder: ...

class CustomReserved3Builder(CustomReserved3):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved3Builder: ...
    def copy(self) -> CustomReserved3Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved3Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...

class CustomReserved4:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved4Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved4Reader: ...
    @staticmethod
    def new_message() -> CustomReserved4Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved4Reader(CustomReserved4):
    def as_builder(self) -> CustomReserved4Builder: ...

class CustomReserved4Builder(CustomReserved4):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved4Builder: ...
    def copy(self) -> CustomReserved4Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved4Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...

class CustomReserved5:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved5Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved5Reader: ...
    @staticmethod
    def new_message() -> CustomReserved5Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved5Reader(CustomReserved5):
    def as_builder(self) -> CustomReserved5Builder: ...

class CustomReserved5Builder(CustomReserved5):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved5Builder: ...
    def copy(self) -> CustomReserved5Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved5Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...

class CustomReserved6:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved6Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved6Reader: ...
    @staticmethod
    def new_message() -> CustomReserved6Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved6Reader(CustomReserved6):
    def as_builder(self) -> CustomReserved6Builder: ...

class CustomReserved6Builder(CustomReserved6):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved6Builder: ...
    def copy(self) -> CustomReserved6Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved6Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...

class CustomReserved7:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved7Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved7Reader: ...
    @staticmethod
    def new_message() -> CustomReserved7Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved7Reader(CustomReserved7):
    def as_builder(self) -> CustomReserved7Builder: ...

class CustomReserved7Builder(CustomReserved7):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved7Builder: ...
    def copy(self) -> CustomReserved7Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved7Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...

class CustomReserved8:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved8Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved8Reader: ...
    @staticmethod
    def new_message() -> CustomReserved8Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved8Reader(CustomReserved8):
    def as_builder(self) -> CustomReserved8Builder: ...

class CustomReserved8Builder(CustomReserved8):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved8Builder: ...
    def copy(self) -> CustomReserved8Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved8Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...

class CustomReserved9:
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[CustomReserved9Reader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> CustomReserved9Reader: ...
    @staticmethod
    def new_message() -> CustomReserved9Builder: ...
    def to_dict(self) -> dict: ...

class CustomReserved9Reader(CustomReserved9):
    def as_builder(self) -> CustomReserved9Builder: ...

class CustomReserved9Builder(CustomReserved9):
    @staticmethod
    def from_dict(dictionary: dict) -> CustomReserved9Builder: ...
    def copy(self) -> CustomReserved9Builder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> CustomReserved9Reader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...
